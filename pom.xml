<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>me.cundill.chris.pi</groupId>
    <artifactId>daemon-test</artifactId>
    <version>1.0-SNAPSHOT</version>

    <name>Raspberry Pi Daemon Test</name>
    <description>
        A test project to prove a Java app can be installed as a daemon service on the Raspberry Pis
    </description>

    <organization>
        <name>Cundill Open Source</name>
        <url>http://chris.cundill.me</url>
    </organization>

    <developers>
        <developer>
            <name>Chris Cundill</name>
            <email>christophercundill@gmail.com</email>
        </developer>
    </developers>

    <properties>
        <deb.maintainer>[<![CDATA[Chris Cundill <christophercundill@gmail.com>]]></deb.maintainer>
        <deb.user>pi-daemon-test</deb.user>
        <deb.classpath/>
        <mainClass>main.App</mainClass>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>
        <dependency>
            <groupId>commons-daemon</groupId>
            <artifactId>commons-daemon</artifactId>
            <version>1.0.15</version>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                            <addClasspath>true</addClasspath>
                            <mainClass>${mainClass}</mainClass>
                            <classpathPrefix>lib/</classpathPrefix>
                            <useUniqueVersions>false</useUniqueVersions>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.8</version>
                <executions>
                    <execution>
                        <id>deb-classpath</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>build-classpath</goal>
                        </goals>
                        <configuration>
                            <prefix>/opt/${project.artifactId}/lib</prefix>
                            <outputProperty>deb.classpath</outputProperty>
                        </configuration>
                    </execution>
                    <execution>
                        <id>deb-copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.vafer</groupId>
                <artifactId>jdeb</artifactId>
                <version>1.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>jdeb</goal>
                        </goals>
                        <configuration>
                            <controlDir>${project.build.outputDirectory}/deb/control</controlDir>
                            <dataSet>
                                <data>
                                    <src>${project.build.directory}/lib</src>
                                    <type>directory</type>
                                    <paths></paths>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/opt/${project.artifactId}/lib</prefix>
                                        <user>${deb.user}</user>
                                        <group>${deb.user}</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.directory}/${project.build.finalName}.jar</src>
                                    <type>file</type>
                                    <paths></paths>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/opt/${project.artifactId}/bin/</prefix>
                                        <user>${deb.user}</user>
                                        <group>${deb.user}</group>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                                <data>
                                    <src>${project.build.outputDirectory}/deb/init.d/daemon</src>
                                    <dst>${project.artifactId}</dst>
                                    <type>file</type>
                                    <paths></paths>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/init.d</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>
                            </dataSet>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>